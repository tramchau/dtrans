% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nmf.R
\name{transformer.nmf}
\alias{transformer.nmf}
\title{Function creating a transformer object by NMF algorithm}
\usage{
transformer.nmf(
  x,
  components = 2,
  center = FALSE,
  scaling = FALSE,
  handle_category = NULL,
  max_iter = 1000
)
}
\arguments{
\item{components}{whole number greater than 0 set the target reduced dimensions for the transformed data, default is 2.}

\item{center}{logical value or a numeric vector corresponding to dataset's columns. Parameter is passed to base::scale.}

\item{scaling}{logical value or a numeric vector corresponding to dataset's columns. Parameter is passed to base::scale.}

\item{handle_category}{character value to handle categorical features. The accepted values are 'label', 'onehot', and 'ignore'. Default value is NULL, if dataset contains character fields, the function return error. .}

\item{max_iter}{positive number to limit the iteration, default is 1000.}
}
\value{
Return "transformer" class.
}
\description{
This function create a transformer object based on the dataset. There are the other settings to preprocessing this dataset before creating the object.
}
\details{
The function is created based on NMFN::nnmf function (Lee et al. 2001 based on Euclidean distance) with some adjustments to fit into the purpose of the package. It includes preprocessing data (scaling, categorical handling) before transforming data. It creates a transformer object with attributes to perform other functionalities.
}
\examples{
data(iris)
nmf <- transformer.nmf(iris[,1:4])
print(nmf)
}
